{"ast":null,"code":"var _jsxFileName = \"/home/alta4/Desktop/livecode_react/src/pages/Category.jsx\";\nimport React from 'react';\nimport Axios from 'axios';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'unistore/react';\nimport { actions, store } from '../store';\nimport Header from '../components/header';\nimport ContentCategory from '../components/conten-category';\nconst url = 'https://api-todofancy.herokuapp.com/api/movies';\n\nclass Category extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.getMovieList = () => {\n      Axios.get(`${url}`).then(function (response) {\n        store.setState({\n          listMovies: response.data.movies,\n          isLoading: false\n        });\n      }).catch(function (error) {\n        store.setState({\n          isLoading: false\n        });\n      });\n    };\n  }\n\n  render() {\n    const _this$props = this.props,\n          listMovies = _this$props.listMovies,\n          isLoading = _this$props.isLoading; // console.log(listMovies)\n\n    console.log('ini lategori', this.props.category);\n    console.warn('abcd', this.props.listMovies);\n    const filterMovies = listMovies.filter(item => {\n      if (item.Category === this.props.category) {\n        return item;\n      }\n\n      return false;\n    });\n    const kumpulanMovies = filterMovies.map((item, key) => {\n      return React.createElement(ContentCategory, {\n        title: item.Title,\n        year: item.Year,\n        image: item.Poster,\n        synopis: item.Synopsis,\n        url: item.url,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      });\n    });\n    console.log('tes', kumpulanMovies);\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, React.createElement(Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, isLoading ? React.createElement(\"div\", {\n      style: {\n        textAlign: 'center'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, \"Loading ...\") : kumpulanMovies));\n  }\n\n}\n\nexport default connect('listMovies, isLoading, category', actions)(withRouter(Category));","map":{"version":3,"sources":["/home/alta4/Desktop/livecode_react/src/pages/Category.jsx"],"names":["React","Axios","withRouter","connect","actions","store","Header","ContentCategory","url","Category","Component","getMovieList","get","then","response","setState","listMovies","data","movies","isLoading","catch","error","render","props","console","log","category","warn","filterMovies","filter","item","kumpulanMovies","map","key","Title","Year","Poster","Synopsis","textAlign"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAAQC,UAAR,QAAyB,kBAAzB;AACA,SAAQC,OAAR,QAAsB,gBAAtB;AACA,SAAQC,OAAR,EAAiBC,KAAjB,QAA6B,UAA7B;AAEA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,eAAP,MAA4B,+BAA5B;AAEA,MAAMC,GAAG,GAAE,gDAAX;;AAIA,MAAMC,QAAN,SAAuBT,KAAK,CAACU,SAA7B,CAAsC;AAAA;AAAA;;AAAA,SAClCC,YADkC,GACnB,MAAI;AACfV,MAAAA,KAAK,CACAW,GADL,CACU,GAAEJ,GAAI,EADhB,EAEKK,IAFL,CAEU,UAASC,QAAT,EAAkB;AACpBT,QAAAA,KAAK,CAACU,QAAN,CAAe;AAACC,UAAAA,UAAU,EAAEF,QAAQ,CAACG,IAAT,CAAcC,MAA3B;AAAmCC,UAAAA,SAAS,EAAE;AAA9C,SAAf;AAEH,OALL,EAMKC,KANL,CAMW,UAASC,KAAT,EAAe;AAClBhB,QAAAA,KAAK,CAACU,QAAN,CAAe;AAACI,UAAAA,SAAS,EAAE;AAAZ,SAAf;AACH,OARL;AASH,KAXiC;AAAA;;AAalCG,EAAAA,MAAM,GAAE;AAAA,wBAC2B,KAAKC,KADhC;AAAA,UACEP,UADF,eACEA,UADF;AAAA,UACcG,SADd,eACcA,SADd,EAEJ;;AACAK,IAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA2B,KAAKF,KAAL,CAAWG,QAAtC;AACAF,IAAAA,OAAO,CAACG,IAAR,CAAa,MAAb,EAAoB,KAAKJ,KAAL,CAAWP,UAA/B;AACA,UAAMY,YAAY,GAAGZ,UAAU,CAACa,MAAX,CAAkBC,IAAI,IAAI;AAE3C,UAAIA,IAAI,CAACrB,QAAL,KAAkB,KAAKc,KAAL,CAAWG,QAAjC,EAA0C;AACtC,eAAOI,IAAP;AACH;;AACD,aAAO,KAAP;AACH,KANoB,CAArB;AAOA,UAAMC,cAAc,GAAGH,YAAY,CAACI,GAAb,CAAiB,CAACF,IAAD,EAAMG,GAAN,KAAc;AAClD,aAAO,oBAAC,eAAD;AACK,QAAA,KAAK,EAAIH,IAAI,CAACI,KADnB;AAEK,QAAA,IAAI,EAAIJ,IAAI,CAACK,IAFlB;AAGK,QAAA,KAAK,EAAIL,IAAI,CAACM,MAHnB;AAIK,QAAA,OAAO,EAAIN,IAAI,CAACO,QAJrB;AAKK,QAAA,GAAG,EAAIP,IAAI,CAACtB,GALjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AAOH,KARsB,CAAvB;AASAgB,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ,EAAmBM,cAAnB;AACA,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKZ,SAAS,GAAG;AAAK,MAAA,KAAK,EAAE;AAACmB,QAAAA,SAAS,EAAG;AAAb,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAH,GAA2DP,cADzE,CAFJ,CADJ;AAUH;;AA7CiC;;AA+CtC,eAAe5B,OAAO,CAAC,iCAAD,EAClBC,OADkB,CAAP,CAEbF,UAAU,CAACO,QAAD,CAFG,CAAf","sourcesContent":["import React from 'react'\nimport Axios from 'axios'\nimport {withRouter} from 'react-router-dom'\nimport {connect} from 'unistore/react'\nimport {actions, store} from '../store'\n\nimport Header from '../components/header'\nimport ContentCategory from '../components/conten-category'\n\nconst url ='https://api-todofancy.herokuapp.com/api/movies'\n\n\n\nclass Category extends React.Component{\n    getMovieList = ()=>{\n        Axios\n            .get(`${url}`)\n            .then(function(response){\n                store.setState({listMovies: response.data.movies, isLoading: false})\n                \n            })\n            .catch(function(error){\n                store.setState({isLoading: false})\n            })\n    }\n\n    render(){\n        const{listMovies, isLoading} = this.props\n        // console.log(listMovies)\n        console.log('ini lategori',this.props.category)\n        console.warn('abcd',this.props.listMovies)\n        const filterMovies = listMovies.filter(item => {\n            \n            if (item.Category === this.props.category){\n                return item\n            }\n            return false\n        })\n        const kumpulanMovies = filterMovies.map((item,key) => {\n            return <ContentCategory\n                        title = {item.Title}\n                        year = {item.Year}\n                        image = {item.Poster}\n                        synopis = {item.Synopsis}\n                        url = {item.url}\n                    />\n        })\n        console.log('tes', kumpulanMovies)\n        return(\n            <div>\n                <Header/>\n                <div>\n                    {isLoading ? <div style={{textAlign : 'center'}}>Loading ...</div> : kumpulanMovies}\n                </div>\n\n            </div>\n\n        )\n    }\n}\nexport default connect('listMovies, isLoading, category',\n    actions\n)(withRouter(Category))"]},"metadata":{},"sourceType":"module"}