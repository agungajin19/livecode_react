{"ast":null,"code":"import createStore from \"unistore\";\nimport Axios from 'axios';\nconst initialState = {\n  api_key: '',\n  email: '',\n  fullname: '',\n  status_login: '',\n  listNews: [],\n  isLoading: ''\n}; // export const store = createStore(initialState)\n// const url ='https://api-todofancy.herokuapp.com/api/movies'\n// export const actions = store => ({\n//     getTopList : ()=>{\n//         Axios\n//             .get(`${url}`)\n//             .then(function(response){\n//                 store.setState({listNews: response.data.articles, isLoading: false})\n//             })\n//             .catch(function(error){\n//                 store.setState({isLoading: false})\n//             })\n//     },\n//     handleCategory : async (state,e) => { \n//         console.warn('ini buat liat target',e)\n//         let keyword = e\n//         console.warn('cek sebelum berubah', state.category)\n//         console.warn('cek udah berubah', state.category)\n//         getEveryThingNews(keyword)\n//     },\n//     handleSearch : async (state,e) => { \n//         console.warn('ini buat liat target',e.target.value)\n//         let keyword = e.target.value\n//         await store.setState({category : keyword, isLoadingEverything: true })\n//         getEveryThingNews(keyword)\n//     }\n// })\n// export const getEveryThingNews = async (keyword) =>{\n//     await Axios\n//         .get(`${url1}&q=${keyword}`)\n//         .then(function(response){\n//             store.setState({listNewsEverything: response.data.articles, isLoadingEverything: false})\n//         })\n//         .catch(function(error){\n//             store.setState({isLoadingEverything: false})\n//         })\n// }","map":{"version":3,"sources":["/home/alta4/Desktop/livecode_react/src/store.js"],"names":["createStore","Axios","initialState","api_key","email","fullname","status_login","listNews","isLoading"],"mappings":"AAAA,OAAOA,WAAP,MAAwB,UAAxB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,MAAMC,YAAY,GAAE;AAChBC,EAAAA,OAAO,EAAG,EADM;AAEhBC,EAAAA,KAAK,EAAG,EAFQ;AAGhBC,EAAAA,QAAQ,EAAG,EAHK;AAIhBC,EAAAA,YAAY,EAAG,EAJC;AAKhBC,EAAAA,QAAQ,EAAG,EALK;AAMhBC,EAAAA,SAAS,EAAG;AANI,CAApB,C,CAQA;AAEA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import createStore from \"unistore\"\nimport Axios from 'axios'\n\nconst initialState ={\n    api_key : '',\n    email : '',\n    fullname : '',\n    status_login : '',\n    listNews : [],\n    isLoading : '',\n}\n// export const store = createStore(initialState)\n\n// const url ='https://api-todofancy.herokuapp.com/api/movies'\n\n\n// export const actions = store => ({\n//     getTopList : ()=>{\n//         Axios\n//             .get(`${url}`)\n//             .then(function(response){\n//                 store.setState({listNews: response.data.articles, isLoading: false})\n//             })\n//             .catch(function(error){\n//                 store.setState({isLoading: false})\n//             })\n//     },\n//     handleCategory : async (state,e) => { \n//         console.warn('ini buat liat target',e)\n//         let keyword = e\n//         console.warn('cek sebelum berubah', state.category)\n//         console.warn('cek udah berubah', state.category)\n//         getEveryThingNews(keyword)\n//     },\n\n//     handleSearch : async (state,e) => { \n//         console.warn('ini buat liat target',e.target.value)\n//         let keyword = e.target.value\n//         await store.setState({category : keyword, isLoadingEverything: true })\n//         getEveryThingNews(keyword)\n//     }\n    \n// })\n\n// export const getEveryThingNews = async (keyword) =>{\n//     await Axios\n//         .get(`${url1}&q=${keyword}`)\n//         .then(function(response){\n//             store.setState({listNewsEverything: response.data.articles, isLoadingEverything: false})\n//         })\n//         .catch(function(error){\n//             store.setState({isLoadingEverything: false})\n//         })\n// }\n\n"]},"metadata":{},"sourceType":"module"}